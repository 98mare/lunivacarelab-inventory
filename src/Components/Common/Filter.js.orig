import { Col, Row, Select } from 'antd'
import React, { useState, useEffect } from 'react'
import styled from 'styled-components'
import AppButton from './AppButton'
import Datepicker from './Datepicker'
import { useDispatch } from 'react-redux';
import { getItemTypeApi } from '../../services/itemItemTypeService'
import { getItemCategoryApi } from '../../services/itemCategoryService'


const Filter = (props) => {
  const { itemType, categroryType, dateRange, dataRet } = props
  const dispatch = useDispatch();

  const { Option } = Select;

  const [iType, setiType] = useState(0)
  const [catType, setCatType] = useState(0)
  const [itemList, setItemList] = useState([])
  const [cateList, setcateList] = useState([])

  const handleClicker = () => {
    let data = {
      cType: catType,
      iType: iType
    }
    dataRet(data);
  }

  useEffect(() => {
    dispatch(
      getItemTypeApi((val) => {
        setItemList(val)
      })
    )
    dispatch(
      getItemCategoryApi((val) => {
        setcateList(val)
      })
    )
  }, [])

<<<<<<< HEAD
const Filter = (props) => {
  const {itemType, categroryType, reangeOfDate} = props;
=======
>>>>>>> 3f30dee4df0f715170260f9ec724bf155616d3b4
  return (
    <FilterContainer>
      <Row justify='space-between'>
        <Row justify='space-between' className='gapping'>
<<<<<<< HEAD
          {reangeOfDate && 
            <Col>
            <Datepicker></Datepicker>
            </Col>
          }
          {itemType && 
=======
          {itemType &&
>>>>>>> 3f30dee4df0f715170260f9ec724bf155616d3b4
            <Col>
              <Select defaultValue="0" onChange={(val) => { setiType(val) }} size='large' className='inputWidth'>
                <Option value="0">All</Option>
                {itemList?.map(iTy => {
                  if (iTy?.IsActive) {
                    return (
                      <Option value={iTy?.TId}>
                        {iTy?.ItemType}
                      </Option>
                    )
                  }
                })
                }
              </Select>
            </Col>
          }
          {categroryType &&
            <Col>
              <Select defaultValue="0" onChange={(val) => { setCatType(val) }} size='large' className='inputWidth'>
                <Option value="0">All</Option>
                {cateList?.map(iTy => {
                  if (iTy?.IsActive) {
                    return (
                      <Option value={iTy?.CId}>
                        {iTy?.CategoryType}
                      </Option>
                    )
                  }
                })
                }
              </Select>
            </Col>
          }
<<<<<<< HEAD
          
=======
          {
            dateRange &&
            <Col>
              <Datepicker></Datepicker>
            </Col>
          }
>>>>>>> 3f30dee4df0f715170260f9ec724bf155616d3b4
        </Row>

        <Col >
<<<<<<< HEAD
          {/* <Button size='large' type='primary'>Search</Button> */}
          <AppButton className='primary-btn' buttonTitle='Search' buttonOnClick={()=> console.log('button clicked')}></AppButton>
=======
          <AppButton className='primary-btn' buttonTitle="Search" buttonOnClick={() => { handleClicker() }}></AppButton>
>>>>>>> 3f30dee4df0f715170260f9ec724bf155616d3b4
        </Col>
      </Row>
    </FilterContainer>
  )
}

export default Filter

const FilterContainer = styled.div`
  background-color: #fefefe;
  padding: 10px;
  .gapping{
    gap: 20px;
    .inputWidth{
      width: 300px;
      text-align: left;
    }
  }
`